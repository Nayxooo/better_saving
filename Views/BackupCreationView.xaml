<UserControl x:Class="better_saving.Views.BackupCreationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Background="#FF1E1E1E">
    <UserControl.Resources>
        <!-- Style for the left button (Full) -->
        <Style x:Key="SegmentLeftButtonStyle" TargetType="RadioButton">
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinWidth" Value="100"/> <!-- Added MinWidth -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border CornerRadius="15,0,0,15"
                                BorderBrush="White"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="10,5"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#2D7DDB"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for the right button (Differential) -->
        <Style x:Key="SegmentRightButtonStyle" TargetType="RadioButton" BasedOn="{StaticResource SegmentLeftButtonStyle}">
            <Setter Property="MinWidth" Value="100"/> <!-- Added MinWidth -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border CornerRadius="0,15,15,0"
                                BorderBrush="White"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="10,5"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#2D7DDB"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="20" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Margin="20"> <!-- Changed StackPanel to Grid for more flexible layout -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Row for Cancel button -->
            <RowDefinition Height="Auto"/> <!-- Row for Title -->
            <RowDefinition Height="*"/>    <!-- Row for main content (form) -->
            <RowDefinition Height="Auto"/> <!-- Row for Create button -->
        </Grid.RowDefinitions>

        <!-- Cancel Button -->
        <Button Content="&#x2190;" Command="{Binding CancelCommand}" 
                HorizontalAlignment="Left" VerticalAlignment="Top" 
                Grid.Row="0" Margin="0,0,0,10" Padding="10,5" Width="30" Height="30"/>

        <TextBlock Text="Backup Job Creation²" Foreground="White" FontSize="18" FontWeight="Bold" 
                   Grid.Row="1" Margin="0,0,0,20" HorizontalAlignment="Center"/>

        <!-- Main Content StackPanel -->
        <StackPanel Grid.Row="2">
            <!-- Job Name -->
            <TextBlock Text="Name:" Foreground="White" Margin="0,0,0,5"/>
            <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>

            <!-- Source Directory -->
            <TextBlock Text="Source Directory:" Foreground="White" Margin="0,0,0,5"/>
            <Grid Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding SourceDirectory, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" IsReadOnly="True"/>
                <Button Content="📁" Command="{Binding SelectSourceDirectoryCommand}" Grid.Column="1" Margin="5,0,0,0"/>
            </Grid>

            <!-- Target Directory -->
            <TextBlock Text="{DynamicResource TargetDir}" Foreground="White" Margin="0,0,0,5"/>
            <Grid Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding TargetDirectory, UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" IsReadOnly="True"/>
                <Button Content="📁" Command="{Binding SelectTargetDirectoryCommand}" Grid.Column="1" Margin="5,0,0,0"/>
            </Grid>

            <!-- Job Type -->
            <TextBlock Text="Type:" Foreground="White" Margin="0,0,0,5"/>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,20" HorizontalAlignment="Center">
                <RadioButton Content="Full" 
                             IsChecked="{Binding IsFullBackup}" 
                             Style="{StaticResource SegmentLeftButtonStyle}" GroupName="JobTypeGroup"/>
                <RadioButton Content="Differential" 
                             IsChecked="{Binding IsDiffBackup}" 
                             Style="{StaticResource SegmentRightButtonStyle}" GroupName="JobTypeGroup"/>
            </StackPanel>
        </StackPanel>

        <!-- Create Button -->
        <Button Content="Create" Command="{Binding CreateCommand}" 
                Grid.Row="3" HorizontalAlignment="Center" Margin="0,10,0,0" Padding="20,10"/>

    </Grid>
</UserControl>
