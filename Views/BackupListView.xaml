<UserControl x:Class="better_saving.Views.BackupListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:better_saving"
             xmlns:converter="clr-namespace:better_saving.Converters"
             Background="#FF1E1E1E">
    <UserControl.Resources>
        <converter:NullOrEmptyToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converter:JobStateToIconConverter x:Key="JobStateToIconConverter"/>
        <converter:IconColorConverter x:Key="IconColorConverter"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   StrokeDashArray="1 2"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   SnapsToDevicePixels="true"
                                   StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background"
                         Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border"
                         Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background"
                         Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border"
                         Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background"
                         Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border"
                         Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background"
                         Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border"
                         Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground"
                         Color="#FF838383"/>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background"
                    Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush"
                    Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness"
                    Value="1"/>
            <Setter Property="HorizontalContentAlignment"
                    Value="Center"/>
            <Setter Property="VerticalContentAlignment"
                    Value="Center"/>
            <Setter Property="Padding"
                    Value="1"/>
            <Setter Property="Cursor"
                    Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10"
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Margin="10,10,0,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0"
                    Orientation="Horizontal"
                    Margin="10"
                    VerticalAlignment="Center">
            <Button Name="SettingsButton"
                    Command="{Binding DataContext.ShowSettingsViewCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                    Width="25"
                    Height="25"
                    Cursor="Hand"
                    Background="#1F547A"
                    BorderThickness="0"
                    ToolTip="{DynamicResource Settings}"
                    Margin="-5,0,10,0">
                <Path Data="M19.9818 21.6364L21.7093 22.3948C22.0671 22.5518 22.4849 22.4657 22.7517 22.1799C23.9944 20.8492 24.9198 19.2536 25.4586 17.5131C25.5748 17.1376 25.441 16.7296 25.1251 16.4965L23.5988 15.3698C23.1628 15.0489 22.9 14.5403 22.9 13.9994C22.9 13.4586 23.1628 12.95 23.5978 12.6297L25.1228 11.5035C25.4386 11.2703 25.5723 10.8623 25.4561 10.487C24.9172 8.74611 23.9912 7.1504 22.7478 5.81991C22.4807 5.53405 22.0626 5.44818 21.7048 5.60568L19.9843 6.36294C19.769 6.45838 19.5385 6.507 19.3055 6.50663C18.4387 6.50572 17.7116 5.85221 17.617 4.98937L17.4079 3.11017C17.3643 2.71823 17.077 2.39734 16.6928 2.31149C15.8128 2.11485 14.9147 2.01047 14.0131 2.00006C13.0891 2.01071 12.19 2.11504 11.3089 2.31138C10.9245 2.39704 10.637 2.71803 10.5933 3.11017L10.3844 4.98794C10.3244 5.52527 10.0133 6.00264 9.54617 6.27415C9.07696 6.54881 8.50793 6.58168 8.01296 6.36404L6.29276 5.60691C5.93492 5.44941 5.51684 5.53528 5.24971 5.82114C4.00637 7.15163 3.08038 8.74734 2.54142 10.4882C2.42513 10.8638 2.55914 11.272 2.87529 11.5051L4.40162 12.6306C4.83721 12.9512 5.09414 13.4598 5.09414 14.0007C5.09414 14.5415 4.83721 15.0501 4.40219 15.3703L2.8749 16.4977C2.55922 16.7307 2.42533 17.1384 2.54122 17.5137C3.07924 19.2561 4.00474 20.8536 5.24806 22.1859C5.51493 22.4718 5.93281 22.558 6.29071 22.4009L8.01859 21.6424C8.51117 21.4269 9.07783 21.4586 9.54452 21.7281C10.0112 21.9976 10.3225 22.4731 10.3834 23.0093L10.5908 24.8855C10.6336 25.273 10.9148 25.5917 11.2933 25.682C13.0725 26.1061 14.9263 26.1061 16.7055 25.682C17.084 25.5917 17.3651 25.273 17.408 24.8855L17.6157 23.0066C17.675 22.4693 17.9729 21.9924 18.44 21.7219C18.9071 21.4515 19.4876 21.4197 19.9818 21.6364ZM14 18C11.7909 18 10 16.2091 10 14C10 11.7909 11.7909 10 14 10C16.2091 10 18 11.7909 18 14C18 16.2091 16.2091 18 14 18Z"
                      Fill="White"
                      Stretch="Uniform"
                      Width="15"
                      Height="15"/>
                <Button.Style>
                    <Style TargetType="Button"
                           BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border CornerRadius="10"
                                            x:Name="border"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="0"
                                            SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter"
                                                          Focusable="False"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          Margin="{TemplateBinding Padding}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True">
                                            <Setter Property="Background"
                                                    TargetName="border"
                                                    Value="#225C87"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FocusVisualStyle"
                                Value="{x:Null}"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Opacity"
                                        Value="1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <TextBlock Text="{DynamicResource BackupJobListTitle}"
                       Foreground="White"
                       FontSize="25"/>
            <Border CornerRadius="15"
                    Background="#FF181818"
                    Margin="5,0,5,0"
                    Height="35"
                    VerticalAlignment="Center"
                    Padding="5,0,5,0">
                <StackPanel Orientation="Horizontal"
                            Margin="0,0,0,0">
                    <Button Name="StartAllJobsButton"
                            Command="{Binding StartAllJobsCommand}"
                            Width="25"
                            Height="25"
                            Cursor="Hand"
                            Background="#1F547A"
                            BorderThickness="0"
                            ToolTip="{DynamicResource StartAllJobsToolTip}"
                            Margin="0,0,4,0">
                        <Path Data="M13.7501344,8.41212026 L38.1671892,21.1169293 C39.7594652,21.9454306 40.3786269,23.9078584 39.5501255,25.5001344 C39.2420737,26.0921715 38.7592263,26.5750189 38.1671892,26.8830707 L13.7501344,39.5878797 C12.1578584,40.4163811 10.1954306,39.7972194 9.36692926,38.2049434 C9.12586301,37.7416442 9,37.2270724 9,36.704809 L9,11.295191 C9,9.50026556 10.4550746,8.045191 12.25,8.045191 C12.6976544,8.045191 13.1396577,8.13766178 13.5485655,8.31589049 L13.7501344,8.41212026 Z"
                              Fill="White"
                              Stretch="Uniform"
                              Width="15"
                              Height="15"
                              Margin="2,0,0,0"/>
                        <Button.Style>
                            <Style TargetType="Button"
                                   BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border CornerRadius="10"
                                                    x:Name="border"
                                                    Background="{TemplateBinding Background}"
                                                    BorderThickness="0"
                                                    SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter"
                                                                  Focusable="False"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  RecognizesAccessKey="True"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter Property="Background"
                                                            TargetName="border"
                                                            Value="#225C87"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="FocusVisualStyle"
                                        Value="{x:Null}"/>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Name="FilterJobListButton"
                            Command="{Binding FilterJobsCommand}"
                            Width="25"
                            Height="25"
                            Cursor="Hand"
                            Background="#22272A"
                            BorderThickness="0"
                            ToolTip="{DynamicResource FilterJobsToolTip}"
                            Margin="4,0,0,0">
                        <Path Data="M8.35153313,4.0110178 L8.40996805,4.00399798 L8.40996805,4.00399798 L8.5,4 L8.57523854,4.00278786 L8.57523854,4.00278786 L8.70072576,4.02024007 L8.70072576,4.02024007 L8.81214252,4.04973809 L8.81214252,4.04973809 L8.92322155,4.09367336 L8.92322155,4.09367336 L9.02070875,4.14599545 L9.02070875,4.14599545 L9.12544899,4.21968877 L9.12544899,4.21968877 L9.20710678,4.29289322 L14.7071068,9.79289322 C15.0976311,10.1834175 15.0976311,10.8165825 14.7071068,11.2071068 C14.3466228,11.5675907 13.7793918,11.5953203 13.3871006,11.2902954 L13.2928932,11.2071068 L9.5,7.415 L9.5,23 C9.5,23.5522847 9.05228475,24 8.5,24 C7.98716416,24 7.56449284,23.6139598 7.50672773,23.1166211 L7.5,23 L7.5,7.415 L3.70710678,11.2071068 C3.34662282,11.5675907 2.77939176,11.5953203 2.38710056,11.2902954 L2.29289322,11.2071068 C1.93240926,10.8466228 1.90467972,10.2793918 2.20970461,9.88710056 L2.29289322,9.79289322 L7.79289322,4.29289322 C7.82828727,4.25749917 7.86567442,4.22531295 7.90469339,4.19633458 L8.0159379,4.12467117 L8.0159379,4.12467117 L8.12866398,4.07122549 L8.12866398,4.07122549 L8.23400703,4.03584514 L8.23400703,4.03584514 L8.35153313,4.0110178 L8.35153313,4.0110178 Z M19.5,4 C20.0128358,4 20.4355072,4.38604019 20.4932723,4.88337887 L20.5,5 L20.5,20.585 L24.2928932,16.7928932 L24.3871006,16.7097046 C24.7793918,16.4046797 25.3466228,16.4324093 25.7071068,16.7928932 C26.0675907,17.1533772 26.0953203,17.7206082 25.7902954,18.1128994 L25.7071068,18.2071068 L20.2071068,23.7071068 L20.163147,23.7485042 L20.163147,23.7485042 L20.0953066,23.8036654 L20.0953066,23.8036654 L19.9840621,23.8753288 L19.9840621,23.8753288 L19.871336,23.9287745 L19.871336,23.9287745 L19.765993,23.9641549 L19.765993,23.9641549 L19.6484669,23.9889822 L19.6484669,23.9889822 L19.5592517,23.9982539 L19.5592517,23.9982539 L19.4406155,23.9982539 L19.4406155,23.9982539 L19.381947,23.9930971 L19.381947,23.9930971 L19.2664859,23.9725773 L19.2664859,23.9725773 L19.1583335,23.9401054 L19.1583335,23.9401054 L19.0767785,23.9063266 L19.0767785,23.9063266 L18.9792912,23.8540045 L18.9792912,23.8540045 L18.8832499,23.787214 C18.8515341,23.7623312 18.8213595,23.7355731 18.7928932,23.7071068 L13.2928932,18.2071068 L13.2097046,18.1128994 C12.9300985,17.7532992 12.9300985,17.2467008 13.2097046,16.8871006 L13.2928932,16.7928932 L13.3871006,16.7097046 C13.7467008,16.4300985 14.2532992,16.4300985 14.6128994,16.7097046 L14.7071068,16.7928932 L18.5,20.585 L18.5,5 L18.5067277,4.88337887 C18.5644928,4.38604019 18.9871642,4 19.5,4 Z"
                              Fill="White"
                              Stretch="Uniform"
                              Width="15"
                              Height="15"/>
                        <Button.Style>
                            <Style TargetType="Button"
                                   BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border CornerRadius="10"
                                                    x:Name="border"
                                                    Background="{TemplateBinding Background}"
                                                    BorderThickness="0"
                                                    SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter"
                                                                  Focusable="False"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  RecognizesAccessKey="True"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <Setter Property="Background"
                                                            TargetName="border"
                                                            Value="#225C87"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="FocusVisualStyle"
                                        Value="{x:Null}"/>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Border>
        </StackPanel>
        <TextBlock Text="{Binding ErrorMessage}"
                   Foreground="Red"
                   Margin="10,5"
                   Grid.Row="1"
                   Visibility="{Binding ErrorMessage, Converter={StaticResource NullToVisibilityConverter}}"/>

        <ListBox Grid.Row="1"
                 ItemsSource="{Binding Jobs}"
                 Margin="10"
                 MinHeight="200"
                 MinWidth="200"
                 Background="#FF181818"
                 BorderThickness="0"
                 HorizontalContentAlignment="Stretch"
                 HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.Template>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border CornerRadius="30"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                      Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ListBox.Template>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Margin"
                            Value="10,10,10,0"/>
                    <Setter Property="Padding"
                            Value="0"/>
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Button Command="{Binding DataContext.ShowJobDetailsCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                            CommandParameter="{Binding}"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
                            Height="50"
                            Cursor="Hand">
                        <Button.Style>
                            <Style TargetType="Button">
                                <!-- Override the default button template completely -->
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border CornerRadius="20"
                                                    x:Name="border"
                                                    Background="{TemplateBinding Background}"
                                                    BorderThickness="0"
                                                    SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter"
                                                                  Focusable="False"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  RecognizesAccessKey="True"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                    <!-- This override prevents the default hover effect -->
                                                </Trigger>
                                                <Trigger Property="IsPressed"
                                                         Value="True">
                                                    <!-- This override prevents the default pressed effect -->
                                                </Trigger>
                                                <Trigger Property="IsFocused"
                                                         Value="True">
                                                    <!-- This override prevents the default focus effect -->
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="FocusVisualStyle"
                                        Value="{x:Null}"/>
                                <!-- Removes the dotted focus outline -->
                                <!-- Default background -->
                                <Setter Property="Background"
                                        Value="#22272A"/>
                                <Setter Property="Foreground"
                                        Value="White"/>
                                <!-- Job state based colors -->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding State}"
                                                 Value="Working">
                                        <Setter Property="Background"
                                                Value="#1F547A"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}"
                                                 Value="Finished">
                                        <Setter Property="Background"
                                                Value="#009951"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}"
                                                 Value="Failed">
                                        <Setter Property="Background"
                                                Value="#7A201F"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}"
                                                 Value="Idle">
                                        <Setter Property="Background"
                                                Value="#22272A"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding State}"
                                                 Value="Stopped">
                                        <Setter Property="Background"
                                                Value="#22272A"/>
                                    </DataTrigger>
                                    <!-- Hover effects - exactly 10% brighter for each state -->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding State}"
                                                       Value="Working"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                                       Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background"
                                                Value="#225C87"/>
                                        <!-- 10% brighter than #1F547A -->
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding State}"
                                                       Value="Finished"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                                       Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background"
                                                Value="#00A95A"/>
                                        <!-- 10% brighter than #009951 -->
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding State}"
                                                       Value="Failed"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                                       Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background"
                                                Value="#872422"/>
                                        <!-- 10% brighter than #7A201F -->
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding State}"
                                                       Value="Idle"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                                       Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background"
                                                Value="#272D31"/>
                                        <!-- 10% brighter than #22272A -->
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding State}"
                                                       Value="Stopped"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
                                                       Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background"
                                                Value="#272D31"/>
                                        <!-- 10% brighter than #22272A -->
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!-- SVG Icon based on state -->                            <!-- SVG Icon based on state -->
                            <ContentControl Grid.Column="0"
                                            Margin="10,0,15,0"
                                            Width="25"
                                            Height="25"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left">
                                <ContentControl.Style>
                                    <Style TargetType="ContentControl">
                                        <Style.Triggers>
                                            <!-- Use MultiDataTrigger to account for both State and IsPausing properties -->
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding State}" Value="Stopped"/>
                                                    <Condition Binding="{Binding IsPausing}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Path Data="M17.75 3C19.5449 3 21 4.45507 21 6.25V7H3V6.25C3 4.45507 4.45507 3 6.25 3H17.75ZM21 8.5V12.0218C19.9897 11.375 18.7886 11 17.5 11C13.9101 11 11 13.9101 11 17.5C11 18.7886 11.375 19.9897 12.0218 21H6.25C4.45507 21 3 19.5449 3 17.75V8.5H21ZM23 17.5C23 14.4624 20.5376 12 17.5 12C14.4624 12 12 14.4624 12 17.5C12 20.5376 14.4624 23 17.5 23C20.5376 23 23 20.5376 23 17.5ZM17.5 17.5001H19.5C19.7761 17.5001 20 17.7239 20 18.0001C20 18.2762 19.7761 18.5001 19.5 18.5001H17C16.7239 18.5001 16.5 18.2762 16.5 18.0001L16.5 17.9985L16.5 14.9999C16.5 14.7238 16.7239 14.4999 17 14.4999C17.2761 14.4999 17.5 14.7238 17.5 14.9999L17.5 17.5001Z"
                                                              Fill="White"
                                                              Stretch="Uniform"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding State}" Value="Working">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Path Data="M21 8.5V12.0218C19.9897 11.375 18.7886 11 17.5 11C13.9101 11 11 13.9101 11 17.5C11 18.7886 11.375 19.9897 12.0218 21H6.25C4.45507 21 3 19.5449 3 17.75V8.5H21ZM17.75 3C19.5449 3 21 4.45507 21 6.25V7H3V6.25C3 4.45507 4.45507 3 6.25 3H17.75ZM23 17.5C23 14.4624 20.5376 12 17.5 12C14.4624 12 12 14.4624 12 17.5C12 20.5376 14.4624 23 17.5 23C20.5376 23 23 20.5376 23 17.5ZM14.5 14C14.7761 14 15 14.2239 15 14.5V15.0506C15.6349 14.4027 16.5203 14 17.5 14C18.6677 14 19.7018 14.5724 20.3368 15.4496C20.4987 15.6733 20.4487 15.9859 20.225 16.1478C20.0013 16.3098 19.6887 16.2597 19.5268 16.036C19.0717 15.4073 18.3334 15 17.5 15C16.6826 15 15.9564 15.392 15.4997 16H16.5C16.7761 16 17 16.2239 17 16.5C17 16.7761 16.7761 17 16.5 17H14.5C14.2239 17 14 16.7761 14 16.5V14.5C14 14.2239 14.2239 14 14.5 14ZM20 19.9494C19.3651 20.5973 18.4797 21 17.5 21C16.4268 21 15.4661 20.5164 14.8248 19.7569C14.6467 19.546 14.6733 19.2305 14.8843 19.0523C15.0952 18.8742 15.4107 18.9008 15.5889 19.1118C16.0482 19.6558 16.7337 20 17.5 20C18.3174 20 19.0436 19.608 19.5002 19H18.5C18.2239 19 18 18.7761 18 18.5C18 18.2239 18.2239 18 18.5 18H20.5C20.7761 18 21 18.2239 21 18.5V20.5C21 20.7761 20.7761 21 20.5 21C20.2239 21 20 20.7761 20 20.5V19.9494Z"
                                                              Fill="White"
                                                              Stretch="Uniform"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding State}" Value="Finished">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Path Data="M17.75 3C19.5449 3 21 4.45507 21 6.25V7H3V6.25C3 4.45507 4.45507 3 6.25 3H17.75ZM21 8.5V12.0218C19.9897 11.375 18.7886 11 17.5 11C13.9101 11 11 13.9101 11 17.5C11 18.7886 11.375 19.9897 12.0218 21H6.25C4.45507 21 3 19.5449 3 17.75V8.5H21ZM23 17.5C23 20.5376 20.5376 23 17.5 23C14.4624 23 12 20.5376 12 17.5C12 14.4624 14.4624 12 17.5 12C20.5376 12 23 14.4624 23 17.5ZM19.8536 15.6464C19.6583 15.4512 19.3417 15.4512 19.1464 15.6464L16.5 18.2929L15.6036 17.3964C15.4083 17.2012 15.0917 17.2012 14.8964 17.3964C14.7012 17.5917 14.7012 17.9083 14.8964 18.1036L16.1464 19.3536C16.3417 19.5488 16.6583 19.5488 16.8536 19.3536L19.8536 16.3536C20.0488 16.1583 20.0488 15.8417 19.8536 15.6464Z"
                                                              Fill="White"
                                                              Stretch="Uniform"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding State}" Value="Failed">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Path Data="M17.5,12 C20.5376,12 23,14.4624 23,17.5 C23,20.5376 20.5376,23 17.5,23 C14.4624,23 12,20.5376 12,17.5 C12,14.4624 14.4624,12 17.5,12 Z M17.5,19.875 C17.1548,19.875 16.875,20.1548 16.875,20.5 C16.875,20.8452 17.1548,21.125 17.5,21.125 C17.8452,21.125 18.125,20.8452 18.125,20.5 C18.125,20.1548 17.8452,19.875 17.5,19.875 Z M21,8.5 L21,12.0218 C19.9897,11.375 18.7886,11 17.5,11 C13.9101,11 11,13.9101 11,17.5 C11,18.6894769 11.3195266,19.8043976 11.8774103,20.7635139 L12.0218,21 L6.25,21 C4.51696414,21 3.10075377,19.6435215 3.00514477,17.9344215 L3,17.75 L3,8.5 L21,8.5 Z M17.5,14 C17.2545778,14 17.0504,14.1769086 17.0080571,14.4101355 L17,14.5 L17,18.5 C17,18.7761 17.2239,19 17.5,19 C17.7454222,19 17.9496,18.8230914 17.9919429,18.5898645 L18,18.5 L18,14.5 C18,14.2239 17.7761,14 17.5,14 Z M17.75,3 C19.4830069,3 20.8992442,4.35645051 20.9948551,6.06557565 L21,6.25 L21,7 L3,7 L3,6.25 C3,4.51696414 4.35645051,3.10075377 6.06557565,3.00514477 L6.25,3 L17.75,3 Z"
                                                              Fill="White"
                                                              Stretch="Uniform"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding State}" Value="Idle">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Path Data="M17.75 3C19.5449 3 21 4.45507 21 6.25V7H3V6.25C3 4.45507 4.45507 3 6.25 3H17.75ZM21 8.5V12.0218C19.9897 11.375 18.7886 11 17.5 11C13.9101 11 11 13.9101 11 17.5C11 18.7886 11.375 19.9897 12.0218 21H6.25C4.45507 21 3 19.5449 3 17.75V8.5H21ZM23 17.5C23 14.4624 20.5376 12 17.5 12C14.4624 12 12 14.4624 12 17.5C12 20.5376 14.4624 23 17.5 23C20.5376 23 23 20.5376 23 17.5ZM17.5 17.5001H19.5C19.7761 17.5001 20 17.7239 20 18.0001C20 18.2762 19.7761 18.5001 19.5 18.5001H17C16.7239 18.5001 16.5 18.2762 16.5 18.0001L16.5 17.9985L16.5 14.9999C16.5 14.7238 16.7239 14.4999 17 14.4999C17.2761 14.4999 17.5 14.7238 17.5 14.9999L17.5 17.5001Z"
                                                              Fill="White"
                                                              Stretch="Uniform"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding State}" Value="Stopped">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Path Data="M17.75 3C19.5449 3 21 4.45507 21 6.25V7H3V6.25C3 4.45507 4.45507 3 6.25 3H17.75ZM21 8.5V12.0218C19.9897 11.375 18.7886 11 17.5 11C13.9101 11 11 13.9101 11 17.5C11 18.7886 11.375 19.9897 12.0218 21H6.25C4.45507 21 3 19.5449 3 17.75V8.5H21ZM23 17.5C23 14.4624 20.5376 12 17.5 12C14.4624 12 12 14.4624 12 17.5C12 20.5376 14.4624 23 17.5 23C20.5376 23 23 20.5376 23 17.5ZM17.5 17.5001H19.5C19.7761 17.5001 20 17.7239 20 18.0001C20 18.2762 19.7761 18.5001 19.5 18.5001H17C16.7239 18.5001 16.5 18.2762 16.5 18.0001L16.5 17.9985L16.5 14.9999C16.5 14.7238 16.7239 14.4999 17 14.4999C17.2761 14.4999 17.5 14.7238 17.5 14.9999L17.5 17.5001Z"
                                                              Fill="White"
                                                              Stretch="Uniform"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                            </ContentControl>
                            <TextBlock Text="{Binding Name}"
                                       Grid.Column="1"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       TextAlignment="Left"
                                       FontWeight="SemiBold"
                                       TextTrimming="CharacterEllipsis"/>
                        </Grid>
                    </Button>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button Grid.Row="2"
                Name="CreateJobButton"
                Height="50"
                Margin="10"
                Command="{Binding CreateJobCommand}"
                Cursor="Hand"
                Background="#1F547A"
                BorderThickness="0"
                HorizontalAlignment="Stretch"
                ToolTip="{DynamicResource CreateJobToolTip}">
            <Path Data="M17.5,12 C20.5375661,12 23,14.4624339 23,17.5 C23,20.5375661 20.5375661,23 17.5,23 C14.4624339,23 12,20.5375661 12,17.5 C12,14.4624339 14.4624339,12 17.5,12 Z M21,8.5 L21.0012092,12.0225923 C19.9906579,11.3752958 18.7891565,11 17.5,11 C13.9101491,11 11,13.9101491 11,17.5 C11,18.7891565 11.3752958,19.9906579 12.0225923,21.0012092 L6.25,21 C4.45507456,21 3,19.5449254 3,17.75 L3,8.5 L21,8.5 Z M17.5,14 L17.4101244,14.0080557 C17.2060313,14.0450996 17.0450996,14.2060313 17.0080557,14.4101244 L17,14.5 L17,17 L14.5,17 L14.4101244,17.0080557 C14.2060313,17.0450996 14.0450996,17.2060313 14.0080557,17.4101244 L14,17.5 L14.0080557,17.5898756 C14.0450996,17.7939687 14.2060313,17.9549004 14.4101244,17.9919443 L14.5,18 L17,18 L17,20.5 L17.0080557,20.5898756 C17.0450996,20.7939687 17.2060313,20.9549004 17.4101244,20.9919443 L17.5,21 L17.5898756,20.9919443 C17.7939687,20.9549004 17.9549004,20.7939687 17.9919443,20.5898756 L18,20.5 L18,18 L20.5,18 L20.5898756,17.9919443 C20.7939687,17.9549004 20.9549004,17.7939687 20.9919443,17.5898756 L21,17.5 L20.9919443,17.4101244 C20.9549004,17.2060313 20.7939687,17.0450996 20.5898756,17.0080557 L20.5,17 L18,17 L18,14.5 L17.9919443,14.4101244 C17.9549004,14.2060313 17.7939687,14.0450996 17.5898756,14.0080557 L17.5,14 Z M17.75,3 C19.5449254,3 21,4.45507456 21,6.25 L21,7 L3,7 L3,6.25 C3,4.45507456 4.45507456,3 6.25,3 L17.75,3 Z"
                  Fill="White"
                  Stretch="Uniform"
                  Width="35"
                  Height="35" Margin="0,3,0,0"/>
            <Button.Style>
                <Style TargetType="Button"
                       BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border CornerRadius="20"
                                        x:Name="border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0"
                                        SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter"
                                                      Focusable="False"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                             Value="True">
                                        <Setter Property="Background"
                                                TargetName="border"
                                                Value="#225C87"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle"
                            Value="{x:Null}"/>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>